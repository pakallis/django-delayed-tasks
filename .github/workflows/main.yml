# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ 'main']
  pull_request:

jobs:
  test:
      runs-on: ubuntu-latest
      container: python:3.8
      strategy:
          fail-fast: false
          matrix:
              python-version: ['3.8', '3.9', '3.10']
      services:
          postgresql:
              image: postgres
              options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5
              env:
                  POSTGRES_USER: test
                  POSTGRES_DB: test
                  POSTGRES_PASSWORD: test
          redis:
              image: redis
              options: >-
                  --health-cmd "redis-cli ping"
                  --health-interval 10s
                  --health-timeout 5s
                  --health-retries 5
          rabbitmq:
              image: rabbitmq
              env:
                  RABBITMQ_DEFAULT_USER: guest
                  RABBITMQ_DEFAULT_PASS: guest

      steps:
          - uses: actions/checkout@v3
          - name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
              python-version: ${{ matrix.python-version }}
          - name: cache poetry install
            uses: actions/cache@v3
            with:
              path: ~/.local
              key: poetry-1.2.2
          - uses: snok/install-poetry@v1.3.3
            with:
              virtualenvs-create: true
              virtualenvs-in-project: true
              installer-parallel: true
              
          - run: poetry install --no-interaction
          - name: Run tests
            run: DJANGO_SETTINGS_MODULE=tests.settings poetry run django-admin migrate && poetry run pytest -s -vvv tests
