# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ 'main']
  pull_request:

jobs:
  test:
      runs-on: ubuntu-latest
      strategy:
          fail-fast: false
          matrix:
              python-version: ['3.8', '3.9', '3.10']
      services:
          postgresql:
              image: postgres
              ports:
                  - 5432:5432
              env:
                  POSTGRES_USER: test
                  POSTGRES_DB: test
                  POSTGRES_PASSWORD: test
          redis:
              image: redis
              ports:
                  - 6379:6379
              env:
                  REDIS_HOST: redis
                  REDIS_PORT: 6379
          rabbitmq:
              image: rabbitmq
              ports:
                  - 5672:5672
              env:
                  RABBITMQ_DEFAULT_USER: guest
                  RABBITMQ_DEFAULT_PASS: guest

      steps:
          - uses: actions/checkout@v3
          - name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
              python-version: ${{ matrix.python-version }}
          - uses: snok/install-poetry@v1.3.3
            with:
              virtualenvs-create: true
              virtualenvs-in-project: true
              installer-parallel: true
              
          - name: Load cached venv
            id: cached-poetry-dependencies
            uses: actions/cache@v3
            with:
              path: .venv
              key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

          - run: poetry install --no-interaction --no-root
            if: steps.cache-deps.outputs.cache-hit != 'true'

          - run: poetry install --no-interaction
          - name: Run tests
            run: |
              source .venv/bin/activate
              pytest tests/
              coverage report
